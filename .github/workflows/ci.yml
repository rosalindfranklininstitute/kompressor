# MIT License
#
# Copyright (c) 2020 Joss Whittle
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.


name: CI - Build Docker Image and Execute Tests

on:
  push:
    branches: [ master, development ]
  pull_request:
    branches: [ master, development ]

  workflow_dispatch:

jobs:
  build-cpu-env:
    name: CPU Env
    runs-on: ubuntu-20.04

    steps:

      # Configure environment variable depending on which branch we are running on
      - name: Set env to master
        if: endsWith(github.ref, '/master')
        run: echo "DOCKER_REPO_TAG=kompressor:env-v1" >> $GITHUB_ENV
      - name: Set env to development
        if: endsWith(github.ref, '/development')
        run: echo "DOCKER_REPO_TAG=kompressor:env-v1-dev" >> $GITHUB_ENV

      # Checks-out Kompressor repository under $(pwd)
      - uses: actions/checkout@v2

      # Build Docker image and execute tests, push image to Dockerhub on success
      - name: Pull existing Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG || true

      - name: Build Docker image
        run: docker build --pull --cache-from ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG --tag ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG - < cpu-env.Dockerfile

      - name: Start container
        run: docker run -itd --name env -v $(pwd):/tmp/repo/ -w /tmp/repo/ ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG

      - name: Install Kompressor within container
        run: docker exec env pip install -e .

      - name: Execute tests within container
        run: |
          docker exec env python -m pytest --cov=src tests/ --cov-report xml:coverage.xml --cov-report term-missing 2>&1 | tee pytest-cpu-results.txt

      - name: Submit coverage to Codecov
        run: |
          bash <(curl -s https://codecov.io/bash) -t ${{ secrets.CODECOV_TOKEN }} -f coverage.xml

      - name: Save test results as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: pytest-cpu-results
          path: pytest-cpu-results.txt

      - name: Halt container
        run: docker stop env

      - name: Push Docker image to Dockerhub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG

  build-gpu-env:
    name: GPU Env
    runs-on: ubuntu-20.04

    steps:

      # Configure environment variable depending on which branch we are running on
      - name: Set env to master
        if: endsWith(github.ref, '/master')
        run: echo "DOCKER_REPO_TAG=kompressor:env-v1-cuda110" >> $GITHUB_ENV
      - name: Set env to development
        if: endsWith(github.ref, '/development')
        run: echo "DOCKER_REPO_TAG=kompressor:env-v1-cuda110-dev" >> $GITHUB_ENV

      # Checks-out Kompressor repository under $(pwd)
      - uses: actions/checkout@v2

      # Build Docker image and execute tests, push image to Dockerhub on success
      - name: Pull existing Docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG || true

      - name: Build Docker image
        run: docker build --pull --cache-from ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG --tag ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG - < gpu-env.Dockerfile

      - name: Start container
        run: docker run -itd --name env -v $(pwd):/tmp/repo/ -w /tmp/repo/ ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG

      - name: Install Kompressor within container
        run: docker exec env pip install -e .

      - name: Execute tests within container
        run: |
          docker exec env python -m pytest --cov=src tests/ --cov-report term-missing 2>&1 | tee pytest-gpu-results.txt

      - name: Save test results as artifact
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: pytest-gpu-results
          path: pytest-gpu-results.txt

      - name: Halt container
        run: docker stop env

      - name: Push Docker image to Dockerhub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push ${{ secrets.DOCKER_USERNAME }}/$DOCKER_REPO_TAG
